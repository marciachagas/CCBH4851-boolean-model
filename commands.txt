#Step 1
#With the csv file containing the CCBH GRN, generate the input file for the ASSA-PBN software:

>python3 GRN_to_ASSA_0.2.py CCBH-2022_Corrigida.csv input_to_assa.pbn

#Step 2
#Run ASSA-PBN

cd ~/Projects/ASSA-PBN/assa-pbn-3.0.1/bin

# from the documentation:
./assa-sim <model file name> [isMatlab] <output file name> <simulation steps> [-initial initialState] [-updateMode updateMode] [-m m]

#running assa-pbn with the test file:
./assa -sim ~/Dropbox/CCBH_Networks/GRN_to_ASSA/input_to_assa_test.pbn ~/Dropbox/CCBH_Networks/GRN_to_ASSA/assa_output.txt  100 -initial 11111  -updateMode synchronous -m 5

#initial state 216 genes
# 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111

#running assa-pbn with the complete network file (5000 steps):

./assa -sim ~/Dropbox/CCBH_Networks/GRN_to_ASSA/input_to_assa.pbn ~/Dropbox/CCBH_Networks/GRN_to_ASSA/assa_output.txt  5000 -initial 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 -updateMode synchronous -m 216

#Step 3
# Compute conserved genes in last n time steps:
# Needs installation of two libraries: 
# >pip install numpy
# >pip install matplotlib.pyplot

> python3 find_basin.py assa_output.txt 

#generates the file reached_basin.csv, containing the number of conserved steps for each gene. Suitable for plotting a barplot


